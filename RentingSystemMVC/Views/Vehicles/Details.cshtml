@using Microsoft.EntityFrameworkCore.Infrastructure
@model RentingSystemMVC.Models.VehicleDetailModel
@using System.Security.Claims

@{
    var givenName = User.FindFirst(ClaimTypes.Name)?.Value;
}

@functions {

    public string GetImageLogoPath(string model)
    {
        return $"/images/optimized/{model.ToLower()}.png";
    }
    public string GetImagePath(string model)
    {
        return $"/images/{model}.png";
    }

}

<style>
    .input-wrapper div {
        display:flex;
    }
  
    .input-wrapper input { 
        width : 36vw;
        margin-right:10px;
    } 

    .rating {
    float:left;
    border:none;
    }
    .rating:not(:checked) > input {
        position:absolute;
        top:-9999px;
        clip:rect(0, 0, 0, 0);
    }
    .rating:not(:checked) > label {
        float:right;
        width:1em;
        padding:0 .1em;
        overflow:hidden;
        white-space:nowrap;
        cursor:pointer;
        font-size:200%;
        line-height:1.2;
        color:#ddd;
    }
    .rating:not(:checked) > label:before {
        content:'â˜… ';
    }
    .rating > input:checked ~ label {
        color: #f70;
    }
    .rating:not(:checked) > label:hover, .rating:not(:checked) > label:hover ~ label {
        color: gold;
    }
    .rating > input:checked + label:hover, .rating > input:checked + label:hover ~ label, .rating > input:checked ~ label:hover, .rating > input:checked ~ label:hover ~ label, .rating > label:hover ~ input:checked ~ label {
        color: #ea0;
    }
    .rating > label:active {
        position:relative;
    }
  
</style>

<div class="container gy-2 pt-3">
    <div class="card detail-card">
        <div class="d-flex flex-row justify-content-between align-items-center" style="margin: 0 10px 0 30px">
            <h1 class="col-sm-4">@Model.Vehicle.Brand @Model.Vehicle.Model</h1>
            <img class="col-sm-2" src="@GetImageLogoPath(@Model.Vehicle.Brand)"/>
        </div>
    </div>
    <div>
        <div class="d-flex flex-row mt-3">
            <div class="col-sm-7">
                <div class="card mt-3 ">
                    <img src="@GetImagePath(@Model.Vehicle.Model)" alt="brand"/>
                </div>
                <div class="card mt-3 p-4">
                    <div class="d-flex align-items-center justify-content-between mb-3">
                        <p class="overview-text">Overview</p>
                        
                          @if (User.Identity.IsAuthenticated && User.IsInRole("User"))
                            {
                                <div> 
                                    <a class="btn btn-dark" onclick="openRentModal(@Model.Vehicle.VehicleID,@Model.Vehicle.RentalCostPerDay)">Rent</a>
                                </div>
                            }
                            else if (User.IsInRole("Admin"))
                            {
                                <div>
                                    <a class="btn btn-danger" onclick="openDeleteModal(@Model.Vehicle.VehicleID)">Delete</a>
                                </div>
                            } else {
                                <div>
                                    <button type="button" class="btn btn-dark" disabled>Rent</button>
                                </div>  
                            }
                    </div>
                    <div class="d-flex flex-row detail-col">
                        <div class="first-col">
                            <div class="detail-col-label">License No.</div>
                            <div class="detail-col-label">Type</div>
                            <div class="detail-col-label">Fuel</div>
                            <div class="detail-col-label">Trunk Space</div>
                        </div>
                        <div class="second-col">
                            <div class="detail-col-value">@Model.Vehicle.LicensePlate</div>
                            <div class="detail-col-value">@Model.Vehicle.Type</div>
                            <div class="detail-col-value">@Model.Vehicle.FuelCapacity</div>
                            <div class="detail-col-value">@Model.Vehicle.TrunkSpace</div>

                        </div>
                        <div class="third-col">
                            <div class="detail-col-label">License to Operate</div>
                            <div class="detail-col-label">No. of Seats</div>
                            <div class="detail-col-label">Fuel Type</div>
                            <div class="detail-col-label">Rental Cost</div>
                        </div>
                        <div class="fourth-col">
                            @if (Model.Vehicle.LicenseToOperate == "3A")
                            {
                                <div class="detail-col-value">3/3A</div>
                            }
                            else
                            {
                                <div class="detail-col-value">@Model.Vehicle.LicenseToOperate</div>
                            }
                            <div class="detail-col-value">@Model.Vehicle.Seats</div>
                            <div class="detail-col-value">@Model.Vehicle.FuelType</div>
                            <div class="detail-col-value">@Model.Vehicle.RentalCostPerDay</div>
                        </div>
                    </div>
                </div>
            </div>

             @if (User.Identity.IsAuthenticated && User.IsInRole("Admin")){

                <div class="card col-sm-5 mt-3 m-0 p-4">
                <div class="row">
                    <div class="d-flex justify-content-between">
                        <h3> Maintenance Details </h3>
                        @* TODO: This button will open up a modal with the vehicle id to create a new maintenance record for this vehicle *@
                        <button class="btn btn-primary" onclick="openMaintenanceModal('@Model.Vehicle.VehicleID')"> New Maintenance </button>
                    </div>
                    <table class="table" id="maintenanceTable">
                        <thead>
                        <tr>
                            <th> Status</th>
                            <th> Start Date</th>
                            <th> End Date</th>
                            <th> Actions</th>
                        </tr>
                        </thead>
                        <tbody>
                        @if (Model.Maintenances.Count == 0)
                        {
                            <tr>
                                <td colspan="3"> No maintenance records found </td>
                            </tr>
                        }
                        else
                        {
                            @foreach (var maintenance in Model.Maintenances)
                            {
                                <tr>    
                                    <td> @maintenance.WorkshopStatus </td>
                                    <td> @maintenance.startMaintDate </td>
                                    <td> @maintenance.endMaintDate </td>
                                    @if (@maintenance.WorkshopStatus != "Completed")
                                    {
                                        <td>
                                             <button class="btn btn-sm btn-success" onclick="openEditMaintenanceModal(@maintenance.MaintenanceID, '@maintenance.startMaintDate.ToString("yyyy-MM-dd")', '@maintenance.endMaintDate.ToString("yyyy-MM-dd")', '@maintenance.WorkshopStatus')">Edit</button>
                                        </td>
                                    }
                                    else
                                    {
                                        <td>
                                            <button class="btn btn-sm btn-secondary" onclick="#', '@maintenance.endMaintDate.ToString("yyyy-MM-dd")', '@maintenance.WorkshopStatus')" aria-disabled="true">Edit</button>
                                        </td>
                                    }
                                    
                                </tr>
                            }
                        }
                        </tbody>
                    </table>
                </div>
            </div>


             } else {

                <div class="card col-sm-5 mt-3 m-0 p-4">
                <div class="row">
                    <div class="d-flex justify-content-between">
                        <h3> Reviews </h3>
                        @if (User.Identity.IsAuthenticated){
                            <button class="btn btn-primary" onclick="openReviewModal(@Model.Vehicle.VehicleID)">Add new review </button>
                        } else {
                            <button class="btn btn-primary" disabled>Add new review </button>
                        }
                        @* TODO: This button will open up a modal with the vehicle id to create a new maintenance record for this vehicle *@
                    </div>
                    <table class="table">
                        <thead>
                        <tr>
                            <th> Name</th>
                            <th> Comment</th>
                            <th> Rating</th>
                            <th> Actions</th>
                        </tr>
                        </thead>
                    <tbody>
                        @if (Model.vehicleReview == null)
                        {
                            <tr>
                                <td colspan="3"> No Review records found </td>
                            </tr>
                        }
                        else
                        {
                            @foreach (var review in Model.vehicleReview.reviews)
                            {
                                <tr>
                                    <td> @review.name </td>
                                    <td> @review.comment </td>
                                    <td> @review.rating </td>
                                    
                                    @if (@review.name == @givenName){
                                        <td>
                                            <button class="btn btn-danger btn-sm" onclick="openDeleteReviewModal(@Model.vehicleReview.vehicleID)">Delete</button>
                                        </td>
                                    } 
                                    
                                </tr>
                            }
                        }
                        </tbody>
                    </table>
                </div>
            </div>

             }
            
            
        </div>
    </div>

    <!-- Rent Modal -->
    <div class="modal fade" id="rentModal" tabindex="-1" role="dialog" aria-labelledby="rentModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="rentModalLabel">Rent Vehicle</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="rentForm">
                        <input type="hidden" id="rentalvehicleID" name="vehicleID"/>
                        <input type="hidden" id="rentalCostPerDay" name="rentalCostPerDay"/>
                        <div class="form-group">
                            <label for="startRentalDate">Start Date</label>
                            <input type="date" class="form-control" id="startRentalDate" name="startRentalDate" min="@DateTime.Now.ToString("yyyy-MM-dd")" required/>
                        </div>
                        <div class="form-group mt-1">
                            <label for="endRentalDate">End Date</label>
                            <input type="date" class="form-control" id="endRentalDate" name="endRentalDate" min="@DateTime.Now.AddDays(1).ToString("yyyy-MM-dd")" required/>
                        </div>
                        <div class="form-group mt-1">
                            <label for="rentalAddress">Rental Address</label>
                            <input type="text" class="form-control" id="rentalAddress" name="rentalAddress" required/>
                        </div>
                        <div class="form-group mt-1">
                            <label for="rentalLot">Rental Lot</label>
                            <input type="number" class="form-control" id="rentalLot" name="rentalLot" required/>
                        </div>

                        <div class="form-group mt-1 input-wrapper">
                            <label for="rentalDiscount">Rental Discount</label>
                            <div> 
                                <input type="text" class="form-control" id="rentalDiscount" name="rentalDiscount" placeholder="Put Discount Code"/>
                                <button type="button" class="btn btn-dark" id="applyButton">Apply</button>
                            </div>
                            <span style="font-size:10px"id="discountHolder"></span>
                        </div>
                        
                        <div class="form-group mt-1">
                            <label for="rentalAmount">Rental Amount</label>
                            <input type="text" class="form-control" id="rentalAmount" name="rentalAmount" readonly/>
                        </div>

                        <button type="submit" class="btn btn-primary mt-2">Rent</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    
    <!-- Add Review Record -->
    <div class="modal fade" id="addReviewlModal" tabindex="-1" role="dialog" aria-labelledby="maintenanceModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addReviewModalLabel">Add New Review</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="reviewForm">
                        <input type="hidden" id="reviewVehicleID" name="reviewVehicleID"/>
                        <div class="form-group mt-1">
                            <label for="Comments">Comment</label>
                            <input type="Text" class="form-control" id="comments" name="comments" required/>
                        </div>
                        <div class="form-group mt-1">
                            <label for="Star">Rating</label>
                            <br>
                            <fieldset class="rating" id="rating" name="rating" required>
                                <input type="radio" id="star5" name="rating" value="5" />
                                <label for="star5">5 stars</label>
                                <input type="radio" id="star4" name="rating" value="4" />
                                <label for="star4">4 stars</label>
                                <input type="radio" id="star3" name="rating" value="3" />
                                <label for="star3">3 stars</label>
                                <input type="radio" id="star2" name="rating" value="2" />
                                <label for="star2">2 stars</label>
                                <input type="radio" id="star1" name="rating" value="1" />
                                <label for="star1">1 star</label>
                            </fieldset>
                        </div>
                        <br><br>

                        <button type="submit" class="btn btn-primary mt-2">Add</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Delete Vehicle Modal -->
    <div class="modal fade" style="top:40%" id="deleteReviewModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Delete Review</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete this Review?</p>
                    <input type="hidden" id="deleteReviewID" name="deleteReviewID"/>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" id="confirmReviewDelete">Delete</button>
                </div>
            </div>
        </div>
    </div>


    <!-- Add Maintenance Record -->
    <div class="modal fade" id="maintenanceModal" tabindex="-1" role="dialog" aria-labelledby="maintenanceModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="maintenanceModalLabel">New Maintenance Record</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="maintenanceForm">
                        <input type="hidden" id="vehicleID" name="vehicleID"/>
                        <div class="form-group">
                            <label for="startMaintenanceDate">Start Date</label>
                            <input type="date" class="form-control" id="startMaintenanceDate" name="startDate" max="@DateTime.Now.ToString("yyyy-MM-dd")" required/>
                        </div>
                        <div class="form-group mt-1">
                            <label for="endMaintenanceDate">End Date</label>
                            <input type="date" class="form-control" id="endMaintenanceDate" name="endDate" required/>
                        </div>
                        <div class="form-group mt-1">
                            <label for="workshopStatus">Description</label>
                            <select class="form-select" aria-label="Default select example" id="workshopStatus" name="workshopStatus" required>
                                <option selected value="In Maintenance">In Maintenance</option>
                                <option value="Completed">Completed</option>
                            </select>
                        </div>

                        <button type="submit" class="btn btn-primary mt-2">Add</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Maintenance Record -->
    <div class="modal fade" id="editMaintenanceModal" tabindex="-1" role="dialog" aria-labelledby="editMaintenanceModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editMaintenanceModalLabel">Edit Maintenance Record</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="editMaintenanceForm">
                        <input type="hidden" id="editMaintenanceID" name="maintenanceID"/>
                        <div class="form-group">
                            <label for="editStartMaintenanceDate">Start Date</label>
                            <input type="date" class="form-control" id="editStartMaintenanceDate" name="startMaintDate" max="@DateTime.Now.ToString("yyyy-MM-dd")" required/>
                        </div>
                        <div class="form-group mt-1">
                            <label for="editEndMaintenanceDate">End Date</label>
                            <input type="date" class="form-control" id="editEndMaintenanceDate" name="endMaintDate" required/>
                        </div>
                        <div class="form-group mt-1">
                            <label for="editWorkshopStatus">Description</label>
                            <select class="form-select" aria-label="Default select example" id="editWorkshopStatus" name="WorkshopStatus" required>
                                <option value="In Maintenance">In Maintenance</option>
                                <option value="Completed">Completed</option>
                            </select>
                        </div>
                        <button type="submit" class="btn btn-primary mt-2">Update</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Delete Vehicle Modal -->
    <div class="modal fade" style="top:40%" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Delete Vehicle</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete this vehicle (@Model.Vehicle.Brand @Model.Vehicle.Model @Model.Vehicle.LicensePlate)?</p>
                    <input type="hidden" id="deleteVehicleID" name="vehicleID"/>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" id="confirmDelete">Delete</button>
                </div>
            </div>
        </div>
    </div>


    @section Scripts
    {
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.24/css/jquery.dataTables.css">
    <script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.10.24/js/jquery.dataTables.js"></script>

    <script>
        let startMaintenanceDate;
        let endMaintenanceDate;
        let workshopStatus;

        document.addEventListener('DOMContentLoaded', (event) => {
            startMaintenanceDate = document.getElementById('startMaintenanceDate');
            endMaintenanceDate = document.getElementById('endMaintenanceDate');
            workshopStatus = document.getElementById('workshopStatus');
            editStartMaintenanceDate = document.getElementById('editStartMaintenanceDate');
            editEndMaintenanceDate = document.getElementById('editEndMaintenanceDate');
            const startRentalDate = document.getElementById('startRentalDate');
            const endRentalDate = document.getElementById('endRentalDate');

            startRentalDate.addEventListener('change', () => {
                let startDate = new Date(startRentalDate.value);
                let minEndDate = new Date(startDate);
                minEndDate.setDate(minEndDate.getDate() + 1);

                let minEndDateString = minEndDate.toISOString().split('T')[0];
                endRentalDate.min = minEndDateString;

                if (new Date(endRentalDate.value) <= startDate) {
                    endRentalDate.value = minEndDateString;
                }
            });

            endRentalDate.addEventListener('change', () => {
                let startDate = new Date(startRentalDate.value);
                let endDate = new Date(endRentalDate.value);

                if (endDate <= startDate) {
                    endRentalDate.value = '';
                }
            });


            startMaintenanceDate.addEventListener('change', () => {
                let startDate = new Date(startMaintenanceDate.value);
                let minEndDate = new Date(startDate);
                minEndDate.setDate(minEndDate.getDate());

                let minEndDateString = minEndDate.toISOString().split('T')[0];
                endMaintenanceDate.min = minEndDateString;

                if (new Date(endMaintenanceDate.value) <= startDate) {
                    endMaintenanceDate.value = minEndDateString;
                }
            });

            endMaintenanceDate.addEventListener('change', () => {
                let startDate = new Date(startMaintenanceDate.value);
                let endDate = new Date(endMaintenanceDate.value);

                if (endDate < startDate) {
                    endMaintenanceDate.value = '';
                }
            });

            editStartMaintenanceDate.addEventListener('change', () => {
                let startDate = new Date(startMaintenanceDate.value);
                let minEndDate = new Date(startDate);
                minEndDate.setDate(minEndDate.getDate());

                let minEndDateString = minEndDate.toISOString().split('T')[0];
                endMaintenanceDate.min = minEndDateString;

                if (new Date(endMaintenanceDate.value) <= startDate) {
                    endMaintenanceDate.value = minEndDateString;
                }
            });

            editEndMaintenanceDate.addEventListener('change', () => {
                let startDate = new Date(startMaintenanceDate.value);
                let endDate = new Date(endMaintenanceDate.value);

                if (endDate < startDate) {
                    endMaintenanceDate.value = '';
                }
            });
        });

        function openMaintenanceModal(vehicleID) {
            $('#vehicleID').val(vehicleID);
            $('#maintenanceModal').modal('show');
        }

         function openRentModal(vehicleID, rentalCostPerDay) {
            $('#rentalvehicleID').val(vehicleID);
            $('#rentalCostPerDay').val(rentalCostPerDay);
            $('#rentModal').modal('show');
        }

        function openEditMaintenanceModal(maintenanceID, startDate, endDate, status) {
            $('#editMaintenanceID').val(maintenanceID);
            $('#editStartMaintenanceDate').val(startDate);
            $('#editEndMaintenanceDate').val(endDate);
            $('#editWorkshopStatus').val(status);
            $('#editMaintenanceModal').modal('show');
        }

        function openDeleteModal(vehicleID) {
            $('#deleteVehicleID').val(vehicleID);
            $('#deleteModal').modal('show');
        }

        function openReviewModal(vehicleID){
            $('#reviewVehicleID').val(vehicleID);
            $('#addReviewlModal').modal('show');
        }

        function openDeleteReviewModal(vehicleID){
            $('#deleteReviewID').val(vehicleID);
            $('#deleteReviewModal').modal('show');
        }

            $(document).ready(function () {
                $('#maintenanceTable').DataTable();

        $(document).ready(function () {
            $('#maintenanceForm').on('submit', function (event) {
                event.preventDefault();
                var formData = $(this).serialize();
                console.log(formData);
                if (startMaintenanceDate.value && endMaintenanceDate.value && workshopStatus.value) {
                    $.ajax({
                        url: '@Url.Action("AddMaintenance", "Vehicles")',
                        type: 'POST',
                        data: formData,
                        success: function () {
                            alert('New maintenance record added!');
                            $('#maintenanceModal').modal('hide');

                            window.location.href = '@Url.Action("Details", "Vehicles", new { id = Model.Vehicle.VehicleID })';
                        },
                        error: function() {
                            alert('Error occurred while adding maintenance record.');
                        }
                    });
                } else {
                    alert('All fields must be filled before submitting');
                }
            });

            $('#editMaintenanceForm').on('submit', function (event) {
                event.preventDefault();
                var formData = $(this).serialize();

                $.ajax({
                    url: '@Url.Action("EditMaintenance", "Vehicles")',
                    type: 'POST',
                    data: formData,
                    success: function () {
                        alert('Maintenance record updated!');
                        $('#editMaintenanceModal').modal('hide');

                        window.location.href = '@Url.Action("Details", "Vehicles", new { id = Model.Vehicle.VehicleID })';
                    },
                    error: function() {
                        alert('Error occurred while updating maintenance record.');
                    }
                });
            });

            $('#confirmDelete').on('click', function () {
                var vehicleID = $('#deleteVehicleID').val();

                $.ajax({
                    url: '@Url.Action("DeleteVehicle", "Vehicles")',
                    type: 'POST',
                    data: { vehicleID: vehicleID },
                    success: function (response) {
                        if (response.success){
                            alert('Vehicle deleted successfully!');
                            window.location.href = '@Url.Action("Manage", "Vehicles")';
                        }else{
                            alert("Vehicle still has existing rental, cannot be deleted!");
                            $('#deleteModal').modal('hide');
                        }
                    },
                    error: function () {
                        alert('Error occurred while deleting vehicle.');
                    }
                });
            });

            $("#applyButton").on('click', function(event) {
                event.preventDefault();

                var promotionCode = $('#rentalDiscount').val();

                $.ajax({
                    url: '/Promotion/getPromotion',
                    type: 'GET',
                    data: { promotionCode: promotionCode },
                    success: function(response) {
                        if (response) {
                            $('#discountHolder').text("You will received " + response.discountRate + "% off your total bill");
                            var rentalValue = $('#rentalAmount').val();
                            var integerValue = parseFloat(rentalValue);

                            if (!isNaN(integerValue)){
                                var startDate = new Date($('#startRentalDate').val());
                                var endDate = new Date($('#endRentalDate').val());
                                var rentalCostPerDay = parseFloat($('#rentalCostPerDay').val());
                                var timeDiff = endDate.getTime() - startDate.getTime();
                                var daysDiff = Math.ceil(timeDiff / (1000 * 3600 * 24));
                                $('#rentalAmount').val((daysDiff * rentalCostPerDay * (100-response.discountRate)/100).toFixed(2));
                            }

                        }
                        
                    },
                    error: function(error) {
                        $('#discountHolder').text("There is no valid discount with this promotion code.");
                    
                        var startDate = new Date($('#startRentalDate').val());
                        var endDate = new Date($('#endRentalDate').val());
                        var rentalCostPerDay = parseFloat($('#rentalCostPerDay').val());

                        if (startDate && endDate && startDate <= endDate && !isNaN(rentalCostPerDay)){ 
                            var timeDiff = endDate.getTime() - startDate.getTime();
                            var daysDiff = Math.ceil(timeDiff / (1000 * 3600 * 24));
                            $('#rentalAmount').val((daysDiff * rentalCostPerDay ).toFixed(2));
                        }
                     
                    }
                });

            })


            $('#addReviewlModal').on('submit', function(event) {
                event.preventDefault();
                var vehicleId = $('#reviewVehicleID').val();
                var comment = $('#comments').val();
                var rating = $('#rating input[name="rating"]:checked').val();

                var formData = {
                    vehicleId : vehicleId,
                    comment : comment,
                    rating : rating,
                }

                $.ajax({
                    url:'/Vehicles/postReview',
                    type: 'POST',
                    data: formData,
                    success: function(response){
                        alert("successfully added new review");
                        location.reload();
                    }, error: function(error){
                        alert("There exists a comment with your review");
                        
                    }

                });

            });


            $('#confirmReviewDelete').on('click', function(event) {
                event.preventDefault();

                var vehicleID = $('#deleteReviewID').val();

                $.ajax({
                    url: '@Url.Action("DeleteReview", "Vehicles")',
                    type: 'POST',
                    data: { vehicleID: vehicleID },
                    success: function (response) {
                        if (response.success){
                            alert('Review deleted successfully!');
                            window.location.reload();
                        }
                    },
                    error: function () {
                        alert("Review cannot be deleted!");
                        $('#deleteModal').modal('hide');
                    }
                });
            });

            $('#rentForm').on('submit', function (event) {
                event.preventDefault();
                var formData = $(this).serialize();
                console.log(formData);
                // Check availability first
                $.ajax({
                    url: '@Url.Action("CheckAvailability", "Vehicles")',
                    type: 'POST',
                    data: formData,
                    success: function (response) {
                        if (response.available) {
                            // Proceed with rental if available
                            $.ajax({
                                url: '@Url.Action("RentVehicle", "Vehicles")',
                                type: 'POST',
                                data: formData,
                                success: function (response) {
                                    if (response.success) {
                                        alert('Vehicle rented successfully!');
                                        $('#rentModal').modal('hide');
                                        window.location.href = '@Url.Action("Index", "Rental")';
                                    } else {
                                        alert('Users are not allowed to double book on the same day');
                                    }
                                },
                                error: function () {
                                    alert('Error occurred while renting the vehicle.');
                                }
                            });
                        } else {
                            alert('The vehicle is not available for the selected dates.');
                        }
                    },
                    error: function () {
                        alert('Error occurred while checking availability.');
                    }
                });
            });

        


            $('#startRentalDate, #endRentalDate').on('change', function () {
                var startDate = new Date($('#startRentalDate').val());
                var endDate = new Date($('#endRentalDate').val());
                var rentalCostPerDay = parseFloat($('#rentalCostPerDay').val());
            
                if (startDate && endDate && startDate <= endDate && !isNaN(rentalCostPerDay)) {
                   var timeDiff = endDate.getTime() - startDate.getTime();
                    var daysDiff = Math.ceil(timeDiff / (1000 * 3600 * 24));
                    var rentalCost;
                    var discountRate;
                    if ($('#discountHolder').text() === "" ||  $('#discountHolder').text() === "There is no valid discount with this promotion code.")
                    {
                     discountRate = undefined;   
                    }else{

                        discountRate = $('#discountHolder').text().split(" ")[3].replace("%", "") ;
                    }
                    
                    if (discountRate === undefined){
                        rentalCost = daysDiff * rentalCostPerDay;
                    } else {
                        rentalCost = daysDiff * rentalCostPerDay * (100 - discountRate) / 100; // If discountRate is defined
                    }
                    
                   $('#rentalAmount').val(rentalCost.toFixed(2));
                } else {
                    $('#rentalAmount').val('');
                }
            });
        });
 
    </script>
    }

</div>